% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reflections.R
\name{expand_structure_factors}
\alias{expand_structure_factors}
\title{Expansion by symmetry of structure factors}
\usage{
expand_structure_factors(SG, hkl, SF)
}
\arguments{
\item{SG}{A character string or a number indicating the
extended Hermann-Mauguin symbol for the space group.}

\item{hkl}{An array or data frame including Miller indices, h, k, l.
These are the reflections to be expanded by symmetry.}

\item{SF}{An array or data frame including the amplitude, Fmod, and
the phase, Fphi (in degree)}
}
\value{
An data frame with h, k, l, symeq, Fmod, Fphi, with the number
        of rows increased to accommodate the reflections generated by
        symmetry, and Fmod and Fphi changed or kept unchanged, depending
        on the specific symmetry-related reflection. Reflections equivalent
        by symmetry have the same integer, symeq.
}
\description{
Expands Miller indices and structure factors
according to all operations of the given symmetry (point) group
}
\details{
One of the input arrays contains the three Miller indices, h, k, l. The
other one contains amplitudes and phases, Fmod, Fphi, of structure
factors. The arrays must have a one-to-one correspondence: the position
of an \eqn{F(h,k,l)} in the second array is the same as the position of
\eqn{(h,k,l)} in the array of Miller indices. Both arrays will be expanded
to accommodate all equivalent reflections, according to the point group.
Amplitudes of equivalent reflections are unchanged, while phases are
changed according to a specific linear transformation:
\deqn{
  \phi(R^tH)=\phi(H)-2\pi H^t T
}
where \eqn{R, T} are 3 X 3 and 3 X 1 matrices of the symmetry group and
\eqn{H} is a 3 X 1 vector containing h, k, l. Duplicates are removed and
no check is done to detect the presence of systematic absences, which must
not be included in the input array.
}
\examples{
# Three reflections to be expanded with "P 4"
hkl <- data.frame(h=c(1,-1,2),k=c(0,1,2),l=c(-1,0,1))
print(class(hkl))

SG <- "P 4"

# Expansion
new_hkl <- expand_miller(SG,hkl)
print(new_hkl)
print(class(new_hkl))

}
